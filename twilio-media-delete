#!/usr/bin/env node

//plusplus is true because we use it in a for loop - no biggie.
/*jslint node: true, plusplus: true*/
"use strict";

//package declarations
var program =   require('commander');
var assert =    require('assert');

//used to track which page of the message list we're on
var currPage;

//command line options
program
    .option('--sid <sid>',          'Your Twilio API Account SID')
    .option('--auth <authtoken>',   'Your Twilio API Auth Token')
    .parse(process.argv);

//sanity check command line input
assert.ok(program.sid, "SID is required");
assert.ok(program.auth, "Auth Token is required");

//build our client
var client = require('twilio')(program.sid, program.auth);

client.messages.list({}, function (err, data) {
    if (err) {
        console.log(err);
        console.log("This usually means your credentials are bad.");
        process.exit(1);
    }
    else{
        //loop through every page
        for (currPage = 0; currPage < data.num_pages; currPage++) {
            //retrieve the current page
            client.messages.list({Page: currPage}, function (err, data) {
                if (err) {
                    console.log("Message list error: " + err);
                }
                else{
                    //get a list of messages for the page (currPage)
                    data.messages.forEach(function (message) {
                        if (message.num_media != 0) {
                            console.log("Message " + message.sid + " has " + message.num_media + " peices of media");
                            //this message has media; retrive it
                            client.messages(message.sid).media.list(function (err, data) {
                                if (err) {
                                    console.log("Media list error: " + err);
                                }
                                else{
                                    //pull each peice of media from the message
                                    data.media_list.forEach(function (media) {
                                        //delete each peice of media
                                        client.messages(media.parent_sid).media(media.sid).delete(function (err, data) {
                                            if (err) {
                                                console.log("Media deletion error: " + err.status + " -- " + err.message);
                                            } else {
                                                console.log("Deleted Media SID " + media.sid + " successfully.");
                                            }
                                        });
                                    });
                                }
                            });
                        }
                    });
                }
            });
        }
    }
});

console.log("Deletion complete.");
